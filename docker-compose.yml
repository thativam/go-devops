services:
  go-gin-api:
    build: src/
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=pass
      - DB_NAME=mydb
      - DB_SSLMODE=disable
      - SERVICE_HOST=service-discovery
    depends_on:
      service-discovery:
        condition: service_started 
      db:
        condition: service_healthy 
    networks:
      - api

  service-discovery: 
    build: serviceDiscovery/
    networks:
      - api

  load-balancer:
    build: loadBalancer/
    ports:
      - "8080:8080"
    environment:
      - SERVICE_REGISTRY_URL=http://service-discovery:3000/services
    depends_on:
      service-discovery:
        condition: service_started
    networks:
      - api

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    networks:
      - api
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/init-db.sql 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydb"] 
      interval: 2s 
      timeout: 5s  
      retries: 10   

  frontend: 
      build: frontend/ 
      ports:
        - "5000:5000" 
      depends_on:
        - go-gin-api
        - load-balancer
      environment:
      - API_HOST=load-balancer
      - API_PORT=8080
      - API_URL=http://load-balancer:8080
      networks:
        - api

networks:
  api:
    driver: bridge